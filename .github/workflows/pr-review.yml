name: Auto Request Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches-ignore:
      - main
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  request-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Auto Request Review
        uses: necojackarc/auto-request-review@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config: |
            reviewers:
              defaults:
                - review-deriv

      # Fallback for push events to create PR if needed
      - name: Create Pull Request
        if: github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const currentBranch = context.ref.replace('refs/heads/', '');
              
              // Get default branch
              const { data: repo } = await github.rest.repos.get({
                owner: context.repo.owner,
                repo: context.repo.name
              });
              
              // Check for existing PR
              const { data: prs } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.name,
                head: `${context.repo.owner}:${currentBranch}`,
                base: repo.default_branch,
                state: 'open'
              });
              
              if (prs.length === 0) {
                console.log('No existing PR found. Creating new PR...');
                const { data: newPr } = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.name,
                  title: `Review requested for ${currentBranch}`,
                  head: currentBranch,
                  base: repo.default_branch,
                  body: 'Automated pull request for review'
                });
                console.log(`Created PR #${newPr.number}`);
              } else {
                console.log(`Found existing PR #${prs[0].number}`);
              }
            } catch (error) {
              console.error('Error:', error.message);
              core.setFailed(error.message);
            }
